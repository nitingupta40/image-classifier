{"ast":null,"code":"var _jsxFileName = \"/Users/thesavages/projects/image-classifier/src/App.js\";\nimport React, { useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nconst stateMachine = {\n  initial: \"initial\",\n  states: {\n    initial: {\n      on: {\n        next: \"loadingModel\",\n        text: \"Load Model\"\n      }\n    },\n    loadingModel: {\n      on: {\n        next: \"modelReady\",\n        text: \"Loading Model\"\n      }\n    },\n    modelReady: {\n      on: {\n        next: \"imageReady\",\n        text: \"Upload Image\"\n      }\n    },\n    imageReady: {\n      on: {\n        next: \"identifying\",\n        text: \"Identifying Image\",\n        showImage: true\n      }\n    },\n    identifying: {\n      on: {\n        next: \"complete\",\n        text: \"Identifying...\"\n      }\n    },\n    complete: {\n      on: {\n        next: \"modelReady\",\n        text: \"Load Reset\",\n        showImage: true,\n        showResult: true\n      }\n    }\n  }\n};\n\nconst reducer = (currentState, event) => stateMachine.states[currentState].on[event] || stateMachine.initial;\n\nconst next = () => dispatch(\"next\");\n\nconst App = () => {\n  const [appState, dispatch] = useReducer(reducer, stateMachine.initial);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(\"next\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \" \", appState));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/thesavages/projects/image-classifier/src/App.js"],"names":["React","useReducer","stateMachine","initial","states","on","next","text","loadingModel","modelReady","imageReady","showImage","identifying","complete","showResult","reducer","currentState","event","dispatch","App","appState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAO,WAAP;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,SADU;AAEnBC,EAAAA,MAAM,EAAE;AACND,IAAAA,OAAO,EAAE;AAAEE,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,IAAI,EAAE;AAA9B;AAAN,KADH;AAENC,IAAAA,YAAY,EAAE;AAAEH,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B;AAAN,KAFR;AAGNE,IAAAA,UAAU,EAAE;AAAEJ,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B;AAAN,KAHN;AAING,IAAAA,UAAU,EAAE;AACVL,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,IAAI,EAAE,mBAA7B;AAAkDI,QAAAA,SAAS,EAAE;AAA7D;AADM,KAJN;AAONC,IAAAA,WAAW,EAAE;AAAEP,MAAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAE;AAA1B;AAAN,KAPP;AAQNM,IAAAA,QAAQ,EAAE;AACRR,MAAAA,EAAE,EAAE;AACFC,QAAAA,IAAI,EAAE,YADJ;AAEFC,QAAAA,IAAI,EAAE,YAFJ;AAGFI,QAAAA,SAAS,EAAE,IAHT;AAIFG,QAAAA,UAAU,EAAE;AAJV;AADI;AARJ;AAFW,CAArB;;AAqBA,MAAMC,OAAO,GAAG,CAACC,YAAD,EAAeC,KAAf,KACdf,YAAY,CAACE,MAAb,CAAoBY,YAApB,EAAkCX,EAAlC,CAAqCY,KAArC,KAA+Cf,YAAY,CAACC,OAD9D;;AAEA,MAAMG,IAAI,GAAG,MAAMY,QAAQ,CAAC,MAAD,CAA3B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWF,QAAX,IAAuBjB,UAAU,CAACc,OAAD,EAAUb,YAAY,CAACC,OAAvB,CAAvC;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMe,QAAQ,CAAC,MAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2CE,QAA3C,CADF,CADF;AAKD,CAPD;;AASA,eAAeD,GAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nconst stateMachine = {\n  initial: \"initial\",\n  states: {\n    initial: { on: { next: \"loadingModel\", text: \"Load Model\" } },\n    loadingModel: { on: { next: \"modelReady\", text: \"Loading Model\" } },\n    modelReady: { on: { next: \"imageReady\", text: \"Upload Image\" } },\n    imageReady: {\n      on: { next: \"identifying\", text: \"Identifying Image\", showImage: true }\n    },\n    identifying: { on: { next: \"complete\", text: \"Identifying...\" } },\n    complete: {\n      on: {\n        next: \"modelReady\",\n        text: \"Load Reset\",\n        showImage: true,\n        showResult: true\n      }\n    }\n  }\n};\n\nconst reducer = (currentState, event) =>\n  stateMachine.states[currentState].on[event] || stateMachine.initial;\nconst next = () => dispatch(\"next\")\n\nconst App = () => {\n  const [appState, dispatch] = useReducer(reducer, stateMachine.initial);\n  return (\n    <div>\n      <button onClick={() => dispatch(\"next\")}> {appState}</button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}